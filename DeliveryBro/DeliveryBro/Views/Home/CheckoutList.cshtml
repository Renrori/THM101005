<div id="app">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 text-center">
                <h1 class="mb-0">結帳區</h1>
            </div>
        </div>
    </div>


    <section class="ftco-section">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-xl-7">
                    <form action="#" class="billing-form">
                        <h3 class="mb-4 billing-heading">取餐人明細</h3>
                        <div class="row align-items-end">
                            <div class="w-100"></div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="streetaddress">外送地址</label>
                                    <input type="text" class="form-control" placeholder="CustomerAddress" v-model="CustomerAddress" required>
                                </div>
                              @*  <div>{{ CustomerAddress }}</div>*@
                            </div>
                            <div class="w-100"></div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="phone">電話</label>
                                    <input type="text" class="form-control" placeholder="CustomerPhone" v-model="CustomerPhone" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="emailaddress">Email</label>
                                    <input type="text" class="form-control" placeholder="CustomerEmail" v-model="CustomerEmail" required>
                                </div>
                            </div>
                            <div class="w-100"></div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="CouponID">套用優惠券</label>
                                    <input type="text" class="form-control" placeholder="優惠券序號" v-model="CouponID">
                                </div>
                            </div>
                            <div class="w-100"></div>
                            <div class="col-md-12">
                                <div class="form-group mt-4">
                                    <div class="radio" required>
                                        <label class="mr-3"><input type="radio" name="Takeradio" value="in"> 內用 </label>
                                        <label class="mr-3"><input type="radio" name="Takeradio" value="out"> 外帶 </label>
                                        <label class="mr-3"><input type="radio" name="Takeradio" value="ship" @@change="addShippingFee"> 外送 </label>
                                    </div>
                                </div>
                            </div>
                            <div class="w-100"></div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <textarea name="" id="" cols="30" rows="7" class="form-control" placeholder="Message" v-model="note"></textarea>
                                </div>
                            </div>

                        </div>
                    </form><!-- END -->
                </div>
                <div class="col-xl-5">
                    <div class="row mt-5 pt-3">
                        <div class="col-md-12 d-flex mb-5">
                            <div class="cart-detail cart-total p-3 p-md-4">
                                <h2 class="billing-heading mb-4">購物車總金額</h2>
                                <p class="d-flex">
                                    <span>折扣前總金額</span>
                                    <span>{{totalAmount}}</span>
                                </p>
                                <p class="d-flex">
                                    <span>運費</span>
                                    <span>{{ShippingFee}}</span>
                                </p>
                                <p class="d-flex">
                                    <span>折價</span>
                                    <span>{{Discount}}</span>
                                </p>
                                <hr>
                                <p class="d-flex total-price">
                                    <span>總金額</span>
                                    <span>{{calculateAmount()}}</span>
                                </p>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="cart-detail p-3 p-md-4">
                                <h3 class="billing-heading mb-4">付款方式</h3>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="radio">
                                            <input type="radio" name="optradio" class="mr-2" value="PaybyCreditCard" v-model="selectedNPPage"> 信用卡付款
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="radio">
                                            <input type="radio" name="optradio" class="mr-2" value="FinalOrderList" v-model="selectedPage"> 現場付款
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="checkbox">
                                            <label><input type="checkbox" value="" class="mr-2"> 我已確認服務條款</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="text-danger">* 請填寫地址、電話、Email資訊</div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="gotoPage">
                                            <button class="btn btn-primary" :disabled="!isValid" @@click="gotoPayPage">前往付款</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> <!-- .col-md-8 -->
            </div>
        </div>
    </section> <!-- .section -->
</div>
@section Scripts
    {
    @*<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>*@
    <script src="https://unpkg.com/vue@3.2.36/dist/vue.global.prod.js"></script>
    <script src="~/axios/axios.min.js"></script>
    <script>
        var baseAddress = "https://localhost:7163/api/HomeApi";
        var baseAddressUser = "https://localhost:7163/api/UserApi";
        var CustomerId = "@User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value";
        var vueApp = {
            data() {
                return {
                    cartItems: [],
                    totalAmount: 0,
                    RestaurantId: "",
                    CustomerId: "",
                    CustomerAddress: "",
                    CustomerPhone: "",
                    CustomerEmail: "",
                    CouponID: "",
                    note: "",
                    ShippingFee: 0,
                    Discount: 0,
                    //subtotal: 0,
                    Takeout: null,
                    AmountAfterDiscount: 0,
                    orderStatus: "waiting",
                    Payment: "未付款",
                    OrderDetailViewModels: [],
                    selectedPage: null,
                    selectedNPPage: null,
                    CustomerInfo: {}
                };
            },
            mounted() {
                const urlParams = new URLSearchParams(window.location.search);
                const Jsondata = urlParams.get("data");
                const checkoutdata = JSON.parse(decodeURIComponent(Jsondata));
                this.cartItems = checkoutdata.items;
                this.totalAmount = checkoutdata.totalAmount;

                this.updateRestaurantId();
                this.CustomerId = "@User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value";
                this.getCustomerInfo();
            },
            methods: {
                calculateAmount() {
                    let total = 0;
                    total = this.totalAmount + this.ShippingFee + this.Discount;
                    this.AmountAfterDiscount = total;
                    return total;
                },
                gotoPayPage() {
                    if (this.selectedPage) {
                        const PayCreditCardData = {
                            items: this.cartItems,
                            totalAmount: this.totalAmount,
                            CustomerAddress: this.CustomerAddress,
                            CustomerPhone: this.CustomerPhone,
                            CustomerEmail: this.CustomerEmail,
                            CouponID: this.CouponID,
                            note: this.note,
                            ShippingFee: this.ShippingFee,
                            Discount: this.Discount,
                            AmountAfterDiscount: this.AmountAfterDiscount
                        };
                        const Jsondata = JSON.stringify(PayCreditCardData);
                        //確認console在f12
                        //console.log(Jsondata);
                        window.location.href = `${this.selectedPage}?data=${Jsondata}`;
                    }
                    else if (this.selectedNPPage) {
                        this.submitNPOrder(); //ok
                    }
                },
                submitNPOrder() {
                    this.OrderDetailViewModels = this.cartItems.map(item => {
                        return {
                            //RestaurantId: item.storeId,
                            DishId: item.dishId,
                            DishName: item.dishName,
                            UnitPrice: item.dishPrice,
                            Quantity: item.dishCount,
                            Subtotal: this.subtotal,
                            Total: this.AmountAfterDiscount
                        }
                    });
                    const submitOrder = {
                        CustomerAddress: this.CustomerAddress,
                        ShippingFee: this.ShippingFee,
                        Payment: this.Payment,
                        Email: this.CustomerEmail,
                        OrderStatus: this.orderStatus,
                        Note: this.note,
                        CustomerId: this.CustomerId,
                        RestaurantId: this.RestaurantId,
                        OrderDetailViewModels: this.OrderDetailViewModels
                    };
                    axios.post(`${baseAddress}/NewebPay`, submitOrder)
                        .then(response => {
                            console.log("成功respone");
                            console.log(response);
                            const submitOrderJson = JSON.stringify(response.data);
                            window.location.href = `${this.selectedNPPage}?data=${submitOrderJson}`
                        }).catch(error => {
                            console.error(error);
                        });
                },
                addShippingFee(event) {
                    if (event.target.value === "ship") {
                        this.ShippingFee = 60;
                    } else {
                        this.ShippingFee = 0;
                    }
                },
                updateRestaurantId() {
                    // 將找到的相同 RestaurantId 賦值給外部的 restaurantId 變數
                    this.RestaurantId = this.duplicateRestaurantId;
                },
                async getCustomerInfo() {
                    const CustomerId = "@User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value";
                    //console.log(CustomerId)
                    //拿出對應cusId
                    try {
                        const response = await axios.get(`${baseAddressUser}/${CustomerId}`).then(Response => {
                            this.CustomerInfo = Response.data;
                            const userAddress = this.CustomerInfo.userAddress;
                            const addressString = userAddress.join(", "); 
                            this.CustomerAddress = addressString;

                            const userEmail = this.CustomerInfo.userEmail;
                            const EmailString = userEmail;
                            this.CustomerEmail = EmailString;

                            const userPhone = this.CustomerInfo.userPhone;
                            const PhoneString = userPhone;
                            this.CustomerPhone = PhoneString;

                        })
                    } catch (error) {
                        console.error(error);
                    }
                }
            },
            computed: {
                isValid() {
                    return this.CustomerAddress && this.CustomerPhone && this.CustomerEmail ;
                },
                duplicateRestaurantId() {
                    const duplicate = this.cartItems.find((item, index, array) => {
                        return array.findIndex((otherItem) => otherItem.storeId === item.storeId) === index;
                    });

                    return duplicate ? duplicate.storeId : '';
                }
            }

        };
        var app = Vue.createApp(vueApp).mount("#app");
    </script>
    }
