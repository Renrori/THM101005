<main id="main" class="main">
	<div class="pagetitle">
		<h1>及時訂單</h1>
		<nav>
			<ol class="breadcrumb">
				<a class="breadcrumb-item" asp-area="store" asp-controller="Home" asp-action="Index">Home</a>
				<li class="breadcrumb-item active">及時訂單</li>
			</ol>
		</nav>
	</div>
	<div id="app">
		<section class="section neworders">
			<div class="row">
				<div class="col">
					<div class="card">
						<div class="card-body pt-3">
							<ul class="nav nav-tabs nav-tabs-bordered">

								<li class="nav-item">
									<button class="nav-link active" data-bs-toggle="tab" data-bs-target="#order-waiting">待回應訂單</button>
								</li>

								<li class="nav-item">
									<button class="nav-link" data-bs-toggle="tab" data-bs-target="#order-accpted">已接受訂單</button>
								</li>
							</ul>
							<div class="tab-content pt-2">

								<div class="tab-pane fade show active profile-overview" id="order-waiting">

									<div class="card" v-for="wo in waitingOrder">
										<div class="card-body">
											<h5 class="card-title">訂單編號: {{wo.orderId}}</h5>
											<div class="row">
												<div class="col-10">
													<div class="row">
														<div class="col-3 label">餐點名稱</div>
														<div class="col-3">單價</div>
														<div class="col-3">數量</div>
														<div class="col-3">小計</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-10">
													<div class="row" v-for="wod in wo.orderDetails">
														<div class="col-3 label">{{wod.dishName}}</div>
														<div class="col-3">$ {{wod.unitPrice}}</div>
														<div class="col-3">{{wod.quantity}}</div>
														<div class="col-3">$ {{wod.subtotal}}</div>
													</div>
												</div>
												<div class="col-2">
													<button class="btn btn-success rounded-circle" @@click="acepted(wo)"><i class="fa-regular fa-circle"></i></button>
													&emsp;
													<button class="btn btn-danger rounded-circle" @@click="deleteOrders(wo)"><i class="fa-solid fa-xmark fa-lg"></i></button>
												</div>
											</div>
											<br />
											<div>總金額: $ {{wo.total}}</div>
										</div>

									</div>
								</div>


								<div class="tab-pane fade profile-edit" id="order-accpted">
									<div class="card" v-for="ao in aceptedOrder">
										<div class="card-body">
											<h5 class="card-title">訂單編號: {{ao.orderId}}</h5>
											<h5>接收訂單時間: {{ao.orderDate}}</h5>
											<h5>預計完成時間: {{ao.completedTime}}</h5>
											<h5>顧客名稱: {{ao.customerName}}</h5>
											<hr />
											<div class="row">
												<div class="col-10">
													<div class="row">
														<div class="col-3 label">餐點名稱</div>
														<div class="col-3">單價</div>
														<div class="col-3">數量</div>
														<div class="col-3">小計</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-10" v-for="aod in ao.orderDetails">
													<div class="row">
														<div class="col-3 label">{{aod.dishName}}</div>
														<div class="col-3">$ {{aod.unitPrice}}</div>
														<div class="col-3">{{aod.quantity}}</div>
														<div class="col-3">$ {{aod.subtotal}}</div>
													</div>
												</div>
												<div class="col-2">
													<button class="btn btn-primary" @@click="completed(ao)"><i class="fa-solid fa-check"></i></button>
													<a class=" btn btn-warning" asp-area="store" asp-controller="Home" asp-action="HelpCenter"><i class="fa-solid fa-info"></i></a>
												</div>
											</div>
											<br />
											<hr /><div>總金額: $ {{ao.total}}</div> <br />
											<div>
												<h5>備註: </h5>
												<div>{{ao.note}}</div>
											</div>
										</div>
									</div>

								</div>
							</div>

						</div>

					</div>
				</div>

			</div>

		</section>
	</div>
</main>

@section Scripts
	{
	<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="~/lib\microsoft/signalr/dist/browser/signalr.js"></script>
	<script src="~/axios/axios.min.js"></script>
	<script>
		var veuHisOrder = {
			data() {
				return {
					waitingOrder: [],
					aceptedOrder: [],
					hubConnection: null
				};
			},
			mounted: function () {
				let _this = this;
				_this.getOrders();
				_this.createHubConnection();
			},
			beforeUnmount: function () {
				let _this = this;
				_this.closeHubConnection();
			},
			methods: {
				getOrders: function () {
					let _this = this;
					axios.get(`/api/Orders/wait`).then(response => {
						_this.waitingOrder = response.data.map(x => ({ ...x }));
					});
					axios.get(`/api/Orders/acepted`).then(response => {
						_this.aceptedOrder = response.data.map(x => ({ ...x }));
					});
				},
				acepted: function (order) {
					let _this = this;
					var request = {
						OrderId: order.orderId,
						OrderStatus: "acepted"
					}
					axios.put(`/api/Orders/${order.orderId}`, request).then(response => {
						_this.getOrders();
					})
				},
				deleteOrders: function (order) {
					let _this = this;
					Swal.fire({
						icon: 'warning',
						title: 'Are you sure?',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: '確定拒絕訂單嗎',
						cancelButtonText: '取消'
					}).then((result) => {
						if (result.isConfirmed) {
							Swal.fire(
								'拒絕成功!',
								'order.orderId 已拒絕!',
								'success'
							)
							axios.delete(`/api/Orders/${order.orderId}`).then(response => {

							});
						}
					})

				},
				completed: function (order) {
					let _this = this;
					var request = {
						OrderId: order.orderId,
						OrderStatus: "completed"
					};
					axios.put(`/api/Orders/${order.orderId}`, request).then(response => {
						_this.getOrders();
					})
				},
				createHubConnection: function () {
					let _this = this;
					_this.hubConnection = new signalR.HubConnectionBuilder().withUrl(`/orderHub`).build();
					_this.hubConnection.on("NewOrder", () => {
						axios.get(`/api/Orders/wait`).then(response => {
							_this.waitingOrder = response.data;
						})
					});
					_this.hubConnection.start().then(() => {
						console.log('connected');
					}).catch((err) => {
						console.error(err.toString());
					});
				},
				closeHubConnection: function () {
					let _this = this;
					if (_this.hubConnection) {
						_this.hubConnection.stop().then(() => {
							console.log("close");
							_this.hubConneciton = null;
						}).catch((err) => {
							console.error(err.toString());
						});
					}
				}
			}
		}

		var app = Vue.createApp(veuHisOrder).mount("#app");
	</script>
}