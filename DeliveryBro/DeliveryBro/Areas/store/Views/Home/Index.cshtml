@{
	ViewData["Title"] = "Home Page";
}

<main id="main" class="main">

	<div class="pagetitle">
		<h1>首頁</h1>
		<nav>
			<ol class="breadcrumb">
				<a class="breadcrumb-item" asp-area="store" asp-controller="Home" asp-action="Index">首頁</a>
				<li class="breadcrumb-item active">Dashboard</li>
			</ol>
		</nav>
	</div><!-- End Page Title -->

	<section class="section dashboard" id="app">
		<div class="row" v-for="store in storeInfo">
			<!-- Left side columns -->
			<div class="col-lg-8">
				<div class="row">
					<div class="col-md-4">
						<div class="card info-card sales-card">
							<div class="card-body">
								<h5 class="card-title">{{currentTime}} <span>| {{weekday}}</span></h5>
								<div class="d-flex align-items-center">
									<div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
										<i class="bi bi-cart"></i>
									</div>
									<div class="ps-3">
										<h6>{{store.restaurantName}}</h6>
										<button v-if="store.restaurantStatus=='open'" type="button" class="btn btn-success" @@click="statuschange(store)">營業中</button>
										<button v-if="store.restaurantStatus=='close'" type="button" class="btn btn-outline-success" @@click="statuschange(store)">休息中</button>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="col-md-4">
						<div class="card info-card revenue-card">
							<div class="card-body">
								<h5 class="card-title">營收 <span>| 本日</span></h5>
								<div class="d-flex align-items-center">
									<div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
										<i class="bi bi-currency-dollar"></i>
									</div>
									<div class="ps-3">
										<h6>${{ordertoday.revenue}}</h6>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="col-md-4">
						<div class="card info-card customers-card">
							<div class="card-body">
								<h5 class="card-title">訂單數量 <span>| 本日</span></h5>
								<div class="d-flex align-items-center">
									<div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
										<i class="bi bi-people"></i>
									</div>
									<div class="ps-3">
										<h6>{{ordertoday.orders}}</h6>
									</div>
								</div>

							</div>
						</div>
					</div>

				</div>

				<div class="col-12">
					<div class="card">
						<v-chart :option="option" id="dishmonthchart" @@mousemove="MonthlyDishPie" style="width:100%; height:700%" autoresize />
					</div>
				</div>

			</div>
			<div class="col-lg-4">
				<div class="card p-4">
					<h2 class="topsellingchart" style="text-align:center">銷量累積排行榜</h2>
					<table class="table table-hover .database">
						<thead>
							<tr>
								<th scope="col">#</th>
								<th scope="col">品項名稱</th>
								<th scope="col">累積數量</th>
								<th scope="col">累積金額</th>
							</tr>
						</thead>
						<tbody>
							<tr v-for="(t,idx) in topselling">
								<th scope="row">{{idx+1}}</th>
								<td>{{t.name}}</td>
								<td>{{t.quantity}}</td>
								<td>{{t.subtotal}}</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</section>

</main><!-- End #main -->
@section Scripts
	{

	<script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" type="text/javascript"></script>
	<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="https://cdn.jsdelivr.net/npm/vue-echarts@latest"></script>
	<script src="https://cdn.jsdelivr.net/npm/echarts@5.4.2/dist/echarts.min.js"></script>
	<script src="~/lib\microsoft/signalr/dist/browser/signalr.js"></script>
	<script src="~/axios/axios.min.js"></script>
	@*<script src="~/store/js/dishechart.js"></script>*@
	<script>

		var vueIndex = {
			data() {
				return {
					currentTime: "",
					weekday: "",
					storeInfo: [],
					option: {
						legend: {},
						tooltip: {
							trigger: 'axis',
							showContent: false
						},
						dataset: {
							source: []
						},
						xAxis: { type: 'category' },
						yAxis: { gridIndex: 0 },
						grid: { top: '60%' },
						series: []
					},
					ordertoday: [],
					topselling: [],

				};

			},
			mounted: function () {
				let _this = this;
				setInterval(() => { _this.currentTime = new Date().toLocaleString() }, 1000);
				_this.weekday = _this.getDayOfWeek();
				_this.getStoreInfo();
				_this.createHubConnection();
				_this.getOrdersToday();
				_this.getDishTopSelling();
				_this.getDishCountInMonth();
			},
			beforeUnmount: function () {
				let _this = this;
				_this.closeHubConnection();
			},
			methods: {
				getDayOfWeek: function () {
					var weekdays = ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六",]
					return weekdays[new Date().getDay()]
				},
				getStoreInfo: function () {
					let _this = this;
					axios.get(`/api/StoreInfo/`).then(response => {
						_this.storeInfo = response.data;
					})
				},
				statuschange: function (store) {
					let _this = this;
					if (store.restaurantStatus == 'open')
						store.restaurantStatus = "close";
					else
						store.restaurantStatus = "open";

					var request = {
						RestaurantId: store.restaurantId,
						RestaurantStatus: store.restaurantStatus
					};
					axios.put(`/api/StoreInfo/status/${store.restaurantId}`, request).then(response => {
						Swal.fire(
							'營業狀態修改成功!'
						)
					})
				},
				MonthlyDishPie: function () {
					let _this = this;
					var chartDom = document.getElementById("dishmonthchart");
					var dmchart = echarts.init(chartDom);
					setTimeout(function () {
						_this.option;
						dmchart.on('updateAxisPointer', function (event) {
							const xAxisInfo = event.axesInfo[0]
							if (xAxisInfo) {
								const dimension = xAxisInfo.value + 1;
								dmchart.setOption({
									series: {
										id: 'pie',
										label: {
											formatter: '{b}:{@@[' + dimension + ']}({d}%)'
										},
										encode: {
											value: dimension,
											tooltip: dimension
										}
									}
								});
							}
						});
						dmchart.setOption(_this.option)
					});
					_this.option && dmchart.setOption(_this.option);
				},
				getOrdersToday: function () {
					let _this = this;
					axios.get(`/api/StoreInfo/orderscount`).then(response => {
						if (response.data[0] == null) {
							_this.ordertoday = [{
								orders: 0,
								revenue: 0
							}];
						}
						else _this.ordertoday = response.data[0];
					})
				},
				getDishTopSelling: function () {
					let _this = this;
					axios.get(`/api/StoreInfo/topselling`).then(response => {
						_this.topselling = response.data;
					})
				},
				getDishCountInMonth: function () {
					let _this = this;
					axios.get(`/api/StoreInfo/dishcount`).then(response => {
						_this.option.dataset.source = response.data;
						for (let i = 0; i < response.data.length; i++) {
							var obj = {
								type: 'line',
								smooth: true,
								seriesLayoutBy: 'row',
								emphasis: { focus: 'series' }
							};
							_this.option.series.push(obj);
						}
						var last = {
							type: 'pie',
							id: 'pie',
							radius: '35%',
							center: ['50%', '35%'],
							emphasis: {
								focus: 'self'
							},
							label: {
								formatter: '{b}: {@@response.data[0][1]} ({d}%)'
							},
							encode: {
								itemName: 'product',
								value: 'response.data[0][1]',
								tooltip: 'response.data[0][1]'
							}
						}
						_this.option.series.push(last);
					})
				},
				createHubConnection: function () {
					let _this = this;
					_this.hubConnection = new signalR.HubConnectionBuilder().withUrl(`/orderHub`).build();
					_this.hubConnection.on("NewOrder", () => {
						_this.getOrdersToday();
					});
					_this.hubConnection.start().then(() => {
						console.log('connected');
					}).catch((err) => {
						console.error(err.toString());
					});
				},
				closeHubConnection: function () {
					let _this = this;
					if (_this.hubConnection) {
						_this.hubConnection.stop().then(() => {
							console.log("close");
							_this.hubConneciton = null;
						}).catch((err) => {
							console.error(err.toString());
						});
					}
				}
			}
		};
		var app = Vue.createApp(vueIndex).component('v-chart', VueECharts).mount('#app');
	</script>
}