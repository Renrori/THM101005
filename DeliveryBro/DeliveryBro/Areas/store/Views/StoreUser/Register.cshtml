<style>
	#btnRegister {
		background-color: #444444;
	}
</style>
<main>
	<div class="container">

		<section class="section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4">
			<div class="container">
				<div class="row justify-content-center">
					<div class="col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center">

						<div class="d-flex justify-content-center py-4">
							<a href="index.html" class="logo d-flex align-items-center w-auto">
								<img src="assets/img/logo.png" alt="">
								<span class="d-none d-lg-block">NiceAdmin</span>
							</a>
						</div><!-- End Logo -->
						@*<div id="app">*@
						@*//掛載VUE*@
						<div class="card mb-3" id="app">

							<div class="card-body">

								<div class="pt-4 pb-2">
									<h5 class="card-title text-center pb-0 fs-4">商家註冊</h5>
									<p class="text-center small">輸入商家詳細資訊以利創建帳戶</p>
								</div>

								@*有把下方form 裡面needs-validation" novalidate刪掉
								<form class="row g-3 needs-validation" novalidate action="/store/StoreUser/Register" method="post">*@

								<form class="row g-3 needs-validation" novalidate>
									<div class="col-12">
										<label for="yourName" class="form-label">商家帳號</label>
										<span v-if="isValidAccount==false" class="text-danger">&emsp;{{errorMsgAccount}}</span>
										<input type="text" name="RestaurantAccount" class="form-control" id="RestaurantAccount" v-model="restaurantAccount">
										<div class="invalid-feedback">請填寫帳號</div>
									</div>

									<div class="col-12">
										<label for="yourPassword" class="form-label">商家密碼</label>
										<span v-if="isValidPassword==false" class="text-danger">&emsp;{{errorMsgPassword}}</span>
										<input type="password" name="RestaurantPassword" class="form-control" id="RestaurantPassword" v-model="restaurantPassword">
										<div class="invalid-feedback">請填寫密碼</div>
									</div>

									<div class="col-12">
										<label for="yourPassword" class="form-label">確認密碼</label>
										<span v-if="isValidConfirmPassword==false" class="text-danger">&emsp{{errorMsgConfirmPassword}}</span>
										<input type="password" name="ConfirmRestaurantPassword" class="form-control" id="ConfirmRestaurantPassword" v-model="confirmRestaurantPassword">
										<div class="invalid-feedback">再次確認密碼</div>
									</div>

									<div class="col-12">
										<label for="yourUsername" class="form-label">商家名稱</label>
										<div class="input-group has-validation">
											<span v-if="isValidName==false" class="text-danger">&emsp;{{errorMsgName}}</span>
											@*<span class="input-group-text" id="inputGroupPrepend">@@</span>*@
											<input type="text" name="RestaurantName" class="form-control" id="RestaurantName" v-model="restaurantName">
											<div class="invalid-feedback">請填寫商家名稱</div>
										</div>
									</div>

									<div class="col-12">
										<label for="yourAddress" class="form-label">商家地址</label>
										<span v-if="isValidAddress==false" class="text-danger">&emsp;{{errorMsgAddress}}</span>
										<input type="text" name="RestaurantAddress" class="form-control" id="RestaurantAddress" v-model="restaurantAddress">
										<div class="invalid-feedback">請填寫商家地址</div>
									</div>

									<div class="col-12">
										<label for="yourPhone" class="form-label">商家電話</label>
										<span v-if="isValidPhone==false" class="text-danger">&emsp;{{errorMsgPhone}}</span>
										<input type="text" name="RestaurantPhone" class="form-control" id="RestaurantPhone" v-model="restaurantPhone">
										<div class="invalid-feedback">請填寫商家電話</div>
									</div>

									<div class="col-12">
										<label for="yourEmail" class="form-label">商家信箱</label>
										<span v-if="isValidEmail==false" class="text-danger">&emsp;{{errorMsgEmail}}</span>
										<input type="email" name="RestaurantEmail" class="form-control" id="RestaurantEmail" v-model="restaurantEmail">
										<div class="invalid-feedback">請填寫商家信箱</div>
									</div>

									@*<div class="col-12">
									<div class="form-check">
									<input class="form-check-input" name="terms" type="checkbox" value="" id="acceptTerms" required>
									<label class="form-check-label" for="acceptTerms">註冊表示同意商店服務條款與會員責任規範及個資聲明</label>
									<div class="invalid-feedback">You must agree before submitting.</div>
									</div>
									</div>*@
									<div class="col-12">
										@*<button id="btnRegister" class="btn btn-primary w-100" type="submit">註冊</button>*@
										<button type="button" class="btn btn-primary" @@click="addRegister()">註冊</button>
									</div>
									<div class="col-12">
										<p class="small mb-0">已經有商家帳號嗎? <a href="/store/StoreUser/Login" style="color:mediumblue">登入</a></p>
									</div>
								</form>

							</div>
						</div>

						<div class="credits">
							<!-- All the links in the footer should remain intact. -->
							<!-- You can delete the links only if you purchased the pro version. -->
							<!-- Licensing information: https://bootstrapmade.com/license/ -->
							<!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/ -->
							Designed by <a href="https://bootstrapmade.com/">BootstrapMade</a>
						</div>

					</div>
				</div>
			</div>

		</section>

	</div>
</main><!-- End #main -->

<a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

@section Scripts
	{
	<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="~/axios/axios.min.js"></script>
	<script>

		var vueIndex = {
			data() {
				return {
					//V-model 繫結變數input
					restaurantAccount: "",
					restaurantPassword: "",
					confirmRestaurantPassword: "",
					restaurantName: "",
					restaurantAddress: "",
					restaurantPhone: "",
					restaurantEmail: "",
					//渲染繫結span變數
					errorMsgAccount: "",
					errorMsgPassword: "",
					errorMsgConfirmPassword: "",
					errorMsgName: "",
					errorMsgAddress: "",
					errorMsgPhone: "",
					errorMsgEmail: "",
					//判斷錯誤訊息的變數
					isValidAccount: true,
					isValidPassword: true,
					isValidConfirmPassword: true,
					isValidName: true,
					isValidAddress: true,
					isValidPhone: true,
					isValidEmail: true,
				};

			},
			mounted: function () {
				let _this = this;
				//_this.addRegister();
			},
			//方法
			methods: {
				//驗證帳號
				checkAccount: function () {
					let _this = this;
					if (_this.restaurantAccount==''){
						return'';
					}
					axios.get(`/api/StoreUser/isConfirm/CheckAccount`, {
						params: {
							account: _this.restaurantAccount
						}
					}).then(response => {
						if (response.data != "正確") {
							_this.errorMsgAccount = response.data;
							_this.isValidAccount = false;
						}
					})
				},
				//驗證密碼
				checkPassword: function () {
					let _this = this;
					if (_this.restaurantPassword == '') {
						return '';
					}
					axios.get(`/api/StoreUser/isConfirm/CheckPassword`, {
						params: {
							password: _this.restaurantPassword
						}
					}).then(response => {
						if (response.data != "正確") {
							_this.errorMsgPassword = response.data;
							_this.isValidPassword = false;
						}
					})
				},
				////驗證再確認的密碼
				checkConfirmPassword: function () {
					let _this = this;
					let tempData = new FormData();
					tempData.append("ConfirmRestaurantPassword", _this.confirmRestaurantPassword);
					tempData.append("RestaurantPassword", _this.restaurantPassword);
			
					axios.post(`/api/StoreUser/CheckConfirmPassword`, tempData,
						{
							headers: {
								'Content-Type': 'multipart/form-data'
							}
						})
					.then(response => {
						if (response.data != "正確") {
							_this.errorMsgConfirmPassword = response.data;
							_this.isValidConfirmPassword = false;
						}
					})
				},
				//驗證名字
				checkName: function () {
					let _this = this;
					if (_this.restaurantName == '') {
						return '';
					}
					axios.get(`/api/StoreUser/isConfirm/CheckName`, {
						params: {
							name: _this.restaurantName
						}
					}).then(response => {
							if (response.data != "正確") {
								_this.errorMsgName = response.data;
								_this.isValidName = false;
							}
						})
				},
				//驗證Email
				checkMail: function () {
					let _this = this;
					if (_this.restaurantEMail == '') {
						return '';
					}
					axios.get(`/api/StoreUser/isConfirm/CheckMail`, {
						params: {
							mail: _this.restaurantEmail
						}
					}).then(response => {
						if (response.data != "正確") {
							_this.errorMsgMail = response.data;
							_this.isValidMail = false;
						}
					})
				},
				//驗證地址
				checkAddress: function () {
					let _this = this;
					if (_this.restaurantAddress == '') {
						return '';
					}
					axios.get(`/api/StoreUser/isConfirm/CheckAddress`, {
						params: {
							address: _this.restaurantAddress
						}
					}).then(response => {
						if (response.data != "正確") {
							_this.errorMsgAddress = response.data;
							_this.isValidAddress = false;
						}
					})
				},
				//驗證電話
				checkPhone: function () {
					let _this = this;
					if (_this.restaurantPhone == '') {
						return '';
					}
					axios.get(`/api/StoreUser/isConfirm/CheckPhone`, {
						params: {
							phone: _this.restaurantPhone
						}
					}).then(response => {
						if (response.data != "正確") {
							_this.errorMsgPhone = response.data;
							_this.isValidPhone = false;
						}
					})
				},

				addRegister: function () {
					let _this = this;
					_this.checkPhone();
					_this.checkAddress();
					_this.checkMail();
					_this.checkName();
					_this.checkConfirmPassword();
					_this.checkPassword();
					_this.checkAccount();

					//如果有一個false就不能註冊
					if (_this.isValidAccount || _this.isValidPassword || _this.isValidConfirmPassword || _this.isValidPhone || _this.isValidName || _this.isValidMail || _this.isValidAddress ||)
					{
					
						//註冊的function 要呼叫controller
						axios.get(`/api/StoreUser/isConfirm/AddRegister`, {
						params: {
								account: _this.restaurantAccount
								password: _this.restaurantPassword
								name: _this.restaurantName
								mail: _this.restaurantEmail
								address:_this.restaurantAddress
								phone: _this.restaurantPhone
						}
					}).then(response => {response.data}
					})
				},
				},
			}
		};
		var app = Vue.createApp(vueIndex).mount("#app");
	</script>
}